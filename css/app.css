/* vibrant color palette */
/* use translucency */
/* diagonal lines */
/* diagonal cross-hatch in boxes */
/* parallax images */
/* gradients - as background or as filter over images */


body,html {
	margin:0;
	padding:0;
}

body {
	transform: translateZ(0);
}

.wrapper {
	height: 100vh;
	/* Set to 100vh for the effect to work for the full height of the viewport. */
	overflow-x: hidden;
	/* The scaling of the images would add a horizontal scrollbar, so disable x overflow. */
	overflow-y: auto;
	/* Enable scrolling on the page. */
	perspective: 2px;
	/* This is the simulated distance from the viewport to transformed objects.*/
}

.section {
	position: relative;
	height: 700px;
}

.section1 {
	position: relative;
	/* Needed for children to be positioned relative to the parent. */
	height: 600px;
	/* The height of the container */	

	display: flex;
	align-items: center;
	justify-content: center;
	color: white;
	text-shadow: 0 0 5px #000;
	/* For text formatting. */
}

.parallax::after {
	content: " ";
	position: absolute;
	top: -50px;
	right: 0;
	bottom: 0;
	left: -6px;
	/* Display and position the pseudo-element */	

	transform: translateZ(-1.5px) scale(1.75);
	/* Move pseudo-element further back so it moves more slowly, then scale it back up to fill the viewport.
		 Scale = 1 + (translateZ * -1) / perspective */
	z-index: -1;
	/* Keep the image from overlapping sibling elements. */ 
}

.static {
	background: linear-gradient(60deg, rgba(0,0,0,1) 30%, rgba(0,212,255,1) 100%);
}

.standings {
	display: flex;
	align-items: center;
	justify-content: center;
	width: 100%;
	max-width: 1100px;
	height: 600px;
}

.bg1::after {
	background-image: url('../img/bg1.jpg');
	background-size: cover;
}

.bg2::after {
	background-image: url('../img/bg2.jpg');
	background-size: cover;
	/* margin-top: 380px; */
}

.bg3::after {
	background-image: url('../img/bg3.jpg');
	background-size: cover;
	/* margin-top: 900px; */
}